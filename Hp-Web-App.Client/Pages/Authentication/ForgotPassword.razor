@page "/ForgotPassword"
@* Import directives *@
@using Hp_Web_App.Client.Authentication;
@using System.ComponentModel.DataAnnotations;
@using Hp_Web_App.Shared.Authentication;
@using Microsoft.AspNetCore.Components.Forms
@using Microsoft.Identity.Client

@* Dependency Injection *@
@inject IUserService UserService
@inject IJSRuntime JsRuntime
@inject AuthenticationStateProvider AuthStateProvider
@inject NavigationManager UriHelper
@inject IConfiguration Config



<h3>ForgotPassword</h3>

@if (resetRequested)
{
    <p>A password reset link has been sent to your email address.</p>
}
else
{
    <form>
        <div class="form-group">
            <label for="email">Email address</label>
            <input type="email" class="form-control" @bind="@email">
        </div>
        <button type="submit" class="btn btn-primary" @onclick="SendResetLink">Send Reset Link</button>
    </form>
}

@code {
    private string email;
    private bool resetRequested;

    private async Task SendResetLink()
    {
        var app = PublicClientApplicationBuilder.Create("YOUR_CLIENT_ID")
            .WithRedirectUri("YOUR_REDIRECT_URI")
            .Build();

        var scopes = new[] { "User.ReadWrite.All" }; // Add any other required scopes

        try
        {
            // Acquire a token to call the Microsoft Graph API
            var result = await app.AcquireTokenInteractive(scopes).WithPrompt(Prompt.SelectAccount).ExecuteAsync();

            // Reset password logic here using the Microsoft Graph API
            // You can use Microsoft.Graph or Microsoft.Graph.Beta NuGet package to interact with the Microsoft Graph API.
            // Implement your code to reset the user's password using the Graph API.
            // For the purpose of this example, we assume the password reset is successful.

            resetRequested = true;
        }
        catch (MsalUiRequiredException ex)
        {
            // Handle the case when the user needs to sign in.
            // You can display a sign-in button or redirect to the login page.
            // For this example, we will redirect the user to the login page.
            UriHelper.NavigateTo("MicrosoftIdentity/Account/SignIn");
        }
        catch (Exception ex)
        {
            // Handle other exceptions if necessary.
            // For this example, we will simply display an error message.
            // Note that in a real application, you should handle errors more gracefully.
            Console.WriteLine(ex.Message);
        }
    }
   
}
