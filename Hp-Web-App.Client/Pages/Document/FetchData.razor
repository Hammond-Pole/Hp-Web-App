@page "/document"
@attribute [Authorize(Roles = "Administrator")]
@inject IDocumentService documentService
@inject IJSRuntime js

<h3>Documents</h3>
<div class="form-group">
    <a class="btn btn-success" href="Document/Create"><i class="oi oi-plus"></i> Create New</a>
</div>
<br>
@if (documents == null)
{
    <text>Loading...</text>
}
else if (documents.Count == 0)
{
    <text>No Records Found.</text>
}
else
{
            <table class="table table-striped">
            <thead>
                <tr>
                    <th>Id</th>
                    <th>Name</th>
                    <th>Description</th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
            @foreach (Document document in documents)
            {
                        <tr>
                    <td>@document.Id</td>
                    <td>@document.Name</td>
                    <td>@document.Description</td>
                            <td>
                        <a class="btn btn-success" href="document/edit/@document.Id">Edit</a>
                            </td>
                        </tr>
            }

            </tbody>
        </table>
}

@code {
    List<Document>? documents { get; set; }

    protected override async Task OnInitializedAsync() => documents = await documentService.GetDocuments();
}
