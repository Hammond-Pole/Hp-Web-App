@using System.Text.Json;
@using Authentication
@using Hp_Web_App.Client.Shared
@inherits LayoutComponentBase

@inject IJSRuntime JSRuntime
@inject AuthenticationStateProvider authStateProvider
@inject NavigationManager NavigationManager

<PageTitle>Document Manager</PageTitle>

<main style="padding:0">
    @if (NavigationManager.Uri.Contains("trainingrequest", StringComparison.OrdinalIgnoreCase) || NavigationManager.Uri.Contains("Client_info", StringComparison.OrdinalIgnoreCase) || NavigationManager.Uri.Contains("Contact_Us", StringComparison.OrdinalIgnoreCase))
{
    <article class="content">
        @Body
    </article>
}
    else
    {
        <div class="top-row px-4 auth">
            <LoginDisplay />
            <AuthorizeView>
                <Authorized>
                    <a class="nav-link" href="/uploaddocument" Match="NavLinkMatch.All">
                        <span class="oi oi-file" aria-hidden="true"></span> Upload A Document
                    </a>
                    <a class="nav-link" data-toggle="collapse" href="#settingsCollapse" role="button" aria-expanded="false" aria-controls="settingsCollapse">
                        <span class="oi oi-cog" aria-hidden="true"></span> Admin
                    </a>
                    <a class="nav-link" @onclick="LogoutAndClearSession" style="cursor: pointer;">Logout</a>
                </Authorized>
                <NotAuthorized>
                    <a href="/login">Login</a>
                </NotAuthorized>
            </AuthorizeView>
        </div>
    <article class="content px-4">
        @Body
    </article>
    }

</main>

@code {

    public async Task LogoutAndClearSession()
    {
        await JSRuntime.InvokeVoidAsync("blazorHelpers.clearSession");
        await JSRuntime.InvokeVoidAsync("blazorHelpers.refresh");
        NavigationManager.NavigateTo("/login", true);
    }
}
