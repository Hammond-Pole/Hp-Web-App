<div class="custom-component">
    <label for="@QuestionFieldLabel" class="bold-label">@QuestionFieldLabel:</label>
    <input type="text" id="@QuestionFieldLabel" @onchange="OnValueChanged" />
</div>

@code {
    // These parameters are added to label the component and to pass the value to the parent component.
    [Parameter] public int DocumentId { get; set; }
    [Parameter] public int QuestionFieldId { get; set; }
    [Parameter] public string QuestionFieldLabel { get; set; }
    [Parameter] public EventCallback<dynamic> ValueChanged { get; set; }
 
    // This is the dynamic object we are passing back to the parent. 
    private QuestionStringValue _questionStringValue = new();

    private async Task OnValueChanged(ChangeEventArgs e)
    {
        _questionStringValue.DocumentId = DocumentId;
        _questionStringValue.QuestionFieldID = QuestionFieldId;
        _questionStringValue.DateValueChanged = DateTime.Now;
        _questionStringValue.StringValue = e.Value.ToString(); ;

        // Invoke the callback sending back the Value Object.
        await ValueChanged.InvokeAsync(_questionStringValue);
    }
}